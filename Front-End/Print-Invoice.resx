<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>